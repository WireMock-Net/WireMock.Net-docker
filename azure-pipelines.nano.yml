variables:
  buildConfiguration: 'Release'
  imageNameNano: 'wiremock.net-nanoserver-$(nano-version)'
  buildProjects: '**/StandAlone.NETCoreApp.csproj'
  tag: '1.3.1'
  poolType: '$(pool-type)'

trigger: none

pool:
${{ if eq( variables['poolType'], 'Hosted' ) }}:
  vmImage: windows-2019
${{ if eq( variables['poolType'], 'SelfHosted' ) }}:
  name: MyBuildPool

steps:
# Build StandAlone.NETCoreApp
- task: DotNetCoreCLI@2
  displayName: Build StandAlone.NETCoreApp
  inputs:
    command: 'build'
    arguments: /p:Configuration=$(buildConfiguration)
    projects: $(buildProjects)

# Docker
- script: docker build -t $(DOCKER_ID)/$(imageNameNano) -f ./StandAlone.NETCoreApp/Dockerfile.nanoserver-$(nano-version) ./StandAlone.NETCoreApp
  displayName: 'Build Docker image [$(imageNameNano):latest]'

- script: docker tag $(DOCKER_ID)/$(imageNameNano):latest $(DOCKER_ID)/$(imageNameNano):$(tag)
  displayName: 'Tag Docker image [$(imageNameNano):$(tag)]'


# for vs2017-win2016 only !
# https://stackoverflow.com/questions/51489359/docker-using-password-via-the-cli-is-insecure-use-password-stdin
# https://github.com/Microsoft/azure-pipelines-tasks/issues/6480#issuecomment-453765536
# echo | set /p="$(DOCKER_PWD)" | docker login --username $(DOCKER_ID) --password-stdin

# For winxxxx ; just use --password
- script: |
    docker login --username $(DOCKER_ID) --password $(DOCKER_PWD)
    docker push $(DOCKER_ID)/$(imageNameNano):latest
    docker push $(DOCKER_ID)/$(imageNameNano):$(tag)
  displayName: 'Push Docker image [$(imageNameNano)(latest,$(tag)]'