variables:
  buildConfiguration: 'Release'
  imageNameNano: 'wiremock.net-nanoserver-$(nano-version)'
  buildProjects: '**/StandAlone.NETCoreApp.csproj'
  tag: '1.5.54'
  deleteDangling: '$(deleteDanglingImages)'

trigger: none

jobs:
- job:
  displayName: Build and create Docker image (SelfHosted)
  pool:
    name: 'MyBuildPool'
    demands:
     - Agent.OS -equals Windows_NT

  steps:
  - task: UseDotNet@2
    displayName: 'Install .NET Core SDK'
    inputs:
      version: 6.0.x

  - task: DotNetCoreCLI@2
    displayName: Build StandAlone.NETCoreApp
    inputs:
      command: 'build'
      arguments: /p:Configuration=$(buildConfiguration)
      projects: $(buildProjects)

  - task: Docker@2
    displayName: 'Docker info'
    inputs:
      command: 'info'

  - task: PowerShell@2
    condition: and(succeeded(), eq(variables['deleteDangling'], 'yes'))
    displayName: Delete dangling Docker images (before)
    continueOnError: true
    inputs:
      targetType: inline
      script: docker rmi $(docker images --filter "dangling=true" --quiet)

  - task: Docker@2
    displayName: 'Build Docker [$(imageNameNano)(latest,$(tag)]'
    inputs:
      command: 'build'
      containerRegistry: 'DockerRegistry'
      repository: '$(DOCKER_ID)/$(imageNameNano)'
      dockerfile: '$(Build.SourcesDirectory)/StandAlone.NETCoreApp/Dockerfile.nanoserver-$(nano-version)'
      tags: |
        $(tag)
        latest

  - task: Docker@2
    displayName: 'Push Docker [$(imageNameNano)(latest,$(tag)]'
    inputs:
      command: 'push'
      containerRegistry: 'DockerRegistry'
      repository: '$(DOCKER_ID)/$(imageNameNano)'
      dockerfile: '$(Build.SourcesDirectory)/StandAlone.NETCoreApp/Dockerfile.nanoserver-$(nano-version)'
      tags: |
        $(tag)
        latest

  - script: docker rmi $(DOCKER_ID)/$(imageNameNano)
    displayName: Delete Docker image [$(imageNameNano):latest]'

  - script: docker rmi $(DOCKER_ID)/$(imageNameNano):$(tag)
    displayName: Delete Docker image [$(imageNameNano):$(tag)]'

  - task: PowerShell@2
    condition: and(succeeded(), eq(variables['deleteDangling'], 'yes'))
    displayName: Delete dangling Docker images (after)
    inputs:
      targetType: inline
      script: docker rmi $(docker images --filter "dangling=true" --quiet)